{"version":3,"sources":["./src/app/components/node-action.service.ts","./src/app/components/child-node/child-node.component.html","./src/app/components/child-node/child-node.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/root-node/root-node.component.html","./src/app/components/root-node/root-node.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NodeActionService {\r\n\r\n  constructor() { }\r\n\r\n  public getUniqueId = () => {\r\n    return (Math.floor(new Date().valueOf() * Math.random()));\r\n  }\r\n}\r\n","<div class=\"child-node\">\r\n  <div class=\"child-menu\">\r\n    <img\r\n      (click)=\"showMenu = !showMenu\"\r\n      class=\"menu-button\"\r\n      *ngIf=\"node.type == 'folder'\"\r\n      [title]=\"showMenu ? 'close menu' : 'show menu'\"\r\n      [src]=\"\r\n        showMenu\r\n          ? '../../../assets/menu-close.svg'\r\n          : '../../../assets/menu-open.svg'\r\n      \"\r\n      alt=\"menu-button\"\r\n      width=\"25px\"\r\n    />\r\n    <div class=\"child-menu-item\" *ngIf=\"node.type == 'folder' && showMenu\">\r\n      <input placeholder=\"enter child name\" type=\"text\" #nodeName />\r\n      <img\r\n        (click)=\"addNode(nodeName.value, 'folder')\"\r\n        title=\"Add as Folder\"\r\n        src=\"../../../assets/add-folder.svg\"\r\n        alt=\"add-folder\"\r\n        width=\"25px\"\r\n      />\r\n      <img\r\n        (click)=\"addNode(nodeName.value, 'file')\"\r\n        title=\"Add as File\"\r\n        src=\"../../../assets/add-file.svg\"\r\n        alt=\"add-file\"\r\n        width=\"25px\"\r\n      />\r\n      <img\r\n        (click)=\"removeChildNode(node)\"\r\n        *ngIf=\"node?.nodes?.length\"\r\n        title=\"Delete Child\"\r\n        src=\"../../../assets/delete.svg\"\r\n        alt=\"delete\"\r\n        width=\"25px\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"child-node-item\" *ngIf=\"node?.nodes?.length\">\r\n    <div *ngFor=\"let node of node.nodes\">\r\n      <img\r\n        *ngIf=\"node.type == 'folder'\"\r\n        src=\"../../../assets/folder-regular.svg\"\r\n        alt=\"folder-regular\"\r\n        width=\"25px\"\r\n      />\r\n      <img\r\n        *ngIf=\"node.type == 'file'\"\r\n        src=\"../../../assets/file-regular.svg\"\r\n        alt=\"file-regular\"\r\n        width=\"25px\"\r\n      />\r\n      <div>{{ node.name }}</div>\r\n      <app-child-node [node]=\"node\"></app-child-node>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { TreeNode } from '../node.model';\r\nimport { NodeActionService } from '../node-action.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-child-node',\r\n  templateUrl: './child-node.component.html',\r\n  styleUrls: ['./child-node.component.scss']\r\n})\r\nexport class ChildNodeComponent implements OnInit {\r\n  @Input('node') node!: TreeNode;\r\n  constructor(private service: NodeActionService) { }\r\n  public showMenu: boolean = false;\r\n  ngOnInit(): void {\r\n  }\r\n  public addNode = (name: string, type: 'file' | 'folder') => {\r\n    if (!name) {\r\n      return;\r\n    }\r\n    this.node.nodes.push({\r\n      id: this.service.getUniqueId(),\r\n      type: type,\r\n      name: name,\r\n      nodes: []\r\n    });\r\n  }\r\n  public removeChildNode = (node: TreeNode) => {\r\n    this.node.nodes = this.node.nodes.filter((_node) => node.id == _node.id);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'srt-ng18';\n}\n","<app-root-node></app-root-node>\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RootNodeComponent } from './components/root-node/root-node.component';\nimport { ChildNodeComponent } from './components/child-node/child-node.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RootNodeComponent,\n    ChildNodeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"root-node\" *ngIf=\"nodes?.length\">\r\n  <div class=\"root-node-tree\" *ngFor=\"let node of nodes\">\r\n    <img\r\n      *ngIf=\"nodes?.length\"\r\n      src=\"../../../assets/folder-regular.svg\"\r\n      alt=\"folder-regular\"\r\n      width=\"30px\"\r\n    />\r\n    <div>{{ node.name }}</div>\r\n    <app-child-node [node]=\"node\"></app-child-node>\r\n  </div>\r\n  <div>\r\n    <pre>  {{ nodes | json }}</pre>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TreeNode } from '../node.model';\r\nimport { NodeActionService } from '../node-action.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root-node',\r\n  templateUrl: './root-node.component.html',\r\n  styleUrls: ['./root-node.component.scss']\r\n})\r\nexport class RootNodeComponent implements OnInit {\r\n\r\n  constructor(private service: NodeActionService) { }\r\n  public showMenu: boolean = false;\r\n  public nodes: TreeNode[] = [];\r\n  ngOnInit(): void {\r\n    this.addNode('Root', 'folder');\r\n  }\r\n  public addNode = (name: string, type: 'file' | 'folder') => {\r\n    this.nodes.push({\r\n      id: this.service.getUniqueId(),\r\n      type: type,\r\n      name: name,\r\n      nodes: []\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}